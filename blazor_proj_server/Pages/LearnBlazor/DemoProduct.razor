@page "/learnBlazor/demoproduct"

<h3 class="text-primary">Demo Products</h3>
<p>Favorites Count: @SelectedFavoriteCount</p> <br />
<p>Last Selected Product: @LastSelected</p> <br/>
<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach(var prod in Products)
            {
                <_product Product="prod" OnLastSelectedProductChange="UpdateLastSelected"
                    OnFavoriteUpdated="FavoriteCountUpdate">
                    <FragOne>#1</FragOne>
                    <FragTwo>#2</FragTwo>
                </_product>
                
            }
    </div>
</div>


@code
{
    List<Demo_Product> Products = new();
    private int SelectedFavoriteCount { get; set; } = 0;
    private string LastSelected { get; set; } = "";

    protected override void OnInitialized()
    {
        Products.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            Price = 9.99,
            IsActive = false,
            ProductProperties = new()
            {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz" },
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
            }
        });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            Price = 5.99,
            IsActive = true,
            ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
        });
    }

    protected void FavoriteCountUpdate(bool isSelected)
    {
        if (isSelected)
        {
            SelectedFavoriteCount++;
        }
        else
        {
            SelectedFavoriteCount--;
        }
    }
    protected void UpdateLastSelected(string productName)
    {
        LastSelected = productName;
    }
}

