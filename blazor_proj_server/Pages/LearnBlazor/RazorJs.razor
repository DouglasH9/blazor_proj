@page "/learnblazor/blazorjs"
@inject IJSRuntime _jsruntime

<h3>Blazor Js</h3>

<div class="row">
    <button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confirm Box</button>
</div>

<div class="row btn-group">
    <button class="btn btn-success" style="width:150px" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-warning" style="width:150px" @onclick="ToastrError">Toastr Error</button>
    <button class="btn btn-info" style="width:150px" @onclick="SweetAlertSuccess">Sweet Alert 1</button>
    <button class="btn btn-danger" style="width:150px" @onclick="SweetAlertFail">Sweet Alert 2</button>
</div>

<br/>
@if(ConfirmResult == true)
    {
        <h1 class="text-success">You chose to confirm. Yay!</h1>
    }


@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult;

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _jsruntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _jsruntime.ToastrSuccess("You did it!");
    }

    private async Task ToastrError()
    {
        await _jsruntime.ToastrError("Oh noooo! There was an ERROR!!!");
    }

    private async Task SweetAlertSuccess()
    {
        await _jsruntime.InvokeVoidAsync("showSwal", "success", "Ya done good, kid");
    }

    private async Task SweetAlertFail()
    {
        await _jsruntime.InvokeVoidAsync("showSwal", "error", "You've failed so hard. Kind of impressive");
    }
}

